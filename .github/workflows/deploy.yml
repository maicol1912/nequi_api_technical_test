name: Deploy to GCP

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GCP_REGION: ${{ secrets.GCP_REGION || 'us-central1' }}
  TERRAFORM_VERSION: '1.7.0'
  IMAGE_NAME: 'franchise-api'

jobs:
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Create terraform.tfvars
        run: |
          cat > franchise-terraform/terraform.tfvars << EOF
          project_id = "${{ secrets.GCP_PROJECT_ID }}"
          region     = "${{ secrets.GCP_REGION }}"
          zone       = "${{ secrets.GCP_REGION }}-a"
          environment = "prod"
          db_name     = "${{ secrets.DB_NAME || 'franchise_nequi' }}"
          db_user     = "${{ secrets.DB_USER || 'franchise_user' }}"
          db_password = "${{ secrets.DB_PASSWORD }}"
          db_tier     = "${{ secrets.DB_TIER || 'db-f1-micro' }}"
          cors_allowed_origins = "${{ secrets.CORS_ALLOWED_ORIGINS || 'http://localhost:3000,http://localhost:4200' }}"
          enable_pgladmin = false
          enable_ci_cd   = true
          github_repo_name = "${{ github.repository }}"
          EOF

      - name: Terraform Plan
        run: |
          cd franchise-terraform
          terraform init
          terraform plan -no-color
        continue-on-error: true

  terraform-apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Create terraform.tfvars
        run: |
          cat > franchise-terraform/terraform.tfvars << EOF
          project_id = "${{ secrets.GCP_PROJECT_ID }}"
          region     = "${{ secrets.GCP_REGION }}"
          zone       = "${{ secrets.GCP_REGION }}-a"
          environment = "prod"
          db_name     = "${{ secrets.DB_NAME || 'franchise_nequi' }}"
          db_user     = "${{ secrets.DB_USER || 'franchise_user' }}"
          db_password = "${{ secrets.DB_PASSWORD }}"
          db_tier     = "${{ secrets.DB_TIER || 'db-f1-micro' }}"
          cors_allowed_origins = "${{ secrets.CORS_ALLOWED_ORIGINS || 'http://localhost:3000,http://localhost:4200' }}"
          enable_pgadmin = false
          enable_ci_cd   = true
          github_repo_name = "${{ github.repository }}"
          EOF

      - name: Terraform Init & Apply
        run: |
          cd franchise-terraform
          terraform init
          terraform apply -auto-approve

      - name: Get Artifact Registry URL
        id: registry
        run: |
          cd franchise-terraform
          REGISTRY_URL=$(terraform output -raw artifact_registry_url)
          echo "registry_url=$REGISTRY_URL" >> $GITHUB_OUTPUT

    outputs:
      registry_url: ${{ steps.registry.outputs.registry_url }}

  build-and-deploy:
    name: 'Build and Deploy'
    runs-on: ubuntu-latest
    needs: terraform-apply
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

      - name: Build Docker Image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ github.sha }} .
          docker tag ${{ env.IMAGE_NAME }}:${{ github.sha }} \
            ${{ needs.terraform-apply.outputs.registry_url }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker tag ${{ env.IMAGE_NAME }}:${{ github.sha }} \
            ${{ needs.terraform-apply.outputs.registry_url }}/${{ env.IMAGE_NAME }}:latest

      - name: Push Docker Image
        run: |
          docker push ${{ needs.terraform-apply.outputs.registry_url }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ needs.terraform-apply.outputs.registry_url }}/${{ env.IMAGE_NAME }}:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy franchise-api-prod-api \
            --image ${{ needs.terraform-apply.outputs.registry_url }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            --region ${{ env.GCP_REGION }} \
            --quiet